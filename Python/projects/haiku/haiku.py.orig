#First Attempt in gather response from hacker news


import json, urllib2, sys, re
from random import shuffle

#Define Functions

def create_syallables_dict(m):
    """Creates Syallables Dictionary
    """
    s = {}
    for x in range(m):
        y = str(x)
        s[y] = []

    return s

def hacker_news_fetch():
    """Connects to Hacker News and fetches data
    """
    print 'Trying this now!'
    hacker_news_api_url = 'http://api.ihackernews.com/page'
    response = json.load(urllib2.urlopen(hacker_news_api_url))
    hacker_news_process_response(response)


def hacker_news_process_response(response):
    """Creats a list of words from all the titles of hacker news articles
    """
    global clean_word_bank
    global clean_string
    global re_pattern
    
    #iterate over items then titles and split all the words to 
    items = response['items']
    for article in items:
        for title in article['title'].split():
            striped_word = title.strip(clean_string)
            """Adding more cleaning up to words"""
            match = re.search(re_pattern, striped_word)
            if not match:
                encoded_word = striped_word.encode('ascii', 'ignore')
                cleaned_word_bank.append(encoded_word)
            else:
                continue

def rhyme_brain_fetch(word):
    """Makes api call to rhyme brain
    """
<<<<<<< HEAD
    #print 'The current word is ' +word
=======
    print 'This is the current word ' +word
>>>>>>> 2d242adaf56c682911866ce532aa0943cf2e4366
    rhyme_brain_api_url = 'http://rhymebrain.com/talk?function=getWordInfo&word='+word
    response = json.load(urllib2.urlopen(rhyme_brain_api_url))
    rhyme_brain_process_response(response)


def rhyme_brain_process_response(response):
    """Processes the rhyme brian response
    """
    global sylb
    sylb[response['syllables']].append(response['word'])
    

def shuffle_pop_additive(additive):
    """Shuffle through the additives and pop a random one to pass to another function
    """
    shuffle(additive)

    line = shuffle_pop_word(additive)
    return line 

def shuffle_pop_word(additive):
    """Iterate over additives, pop word into array
    """
    global sylb

    line = []
    popped_additive = additive.pop()

    for x in popped_additive:
        if sylb[x]:
            break 


def build_line(additive):
<<<<<<< HEAD
    #print additive
=======
    """Builds a line by shuffling an additive"""
    print additive
>>>>>>> 2d242adaf56c682911866ce532aa0943cf2e4366
    shuffle(additive)
    popped_additive = additive.pop()
    #print popped_additive
    line = build_words(popped_additive)
    return line



def build_words(popped_additive):
    """Builds the words of a single line"""
    global sylb
    line = []
    shuffle(popped_additive)

    for key in popped_additive:
        #print key
        str_key = str(key)
        print str_key
        shuffle(sylb[str_key])
        word = sylb[str_key].pop()
        #print word
        line.append(word)
        #print line

    line.append('\n')
    print line
    return line

def build_haiku(line1, line2, line3):

    #let's add all lines together
    haiku_list = line1 + line2 + line3
    haiku = ''
    for word in haiku_list:
        haiku += word + ' '
    return haiku



#CONSTANTS

ADDITIVES = {'5':[list('11111'), list('1112'), list('23'), list('113'), list('14'), list('5')], '7':[list('61'), list('52'), list('511'), list('43'), list('421'), list('4111'), list('331'), list('322'), list('31111'), list('2221')]}


#define global vars


cleaned_word_bank = list()
clean_string = "().,?!|"
sylb = create_syallables_dict(7)
re_pattern = '[0-9]|-|:|;|\'|\"|&'


#Start Script 

while hacker_news_fetch() == urllib2.HTTPError:



for item in range(10):
    try:
        hacker_news_fetch()
    except urllib2.HTTPError:
        while True:
            try:
                hacker_news_fetch()
            except urllib2.HTTPError:
                continue
            else:
                break

print cleaned_word_bank

#starts chain 
for word in cleaned_word_bank:
    rhyme_brain_fetch(word)

#print sylb

line1 = build_line(ADDITIVES['5'])
line2 = build_line(ADDITIVES['7'])
line3 = build_line(ADDITIVES['5'])

#print line1
#print line2
#print line3

haiku = build_haiku(line1, line2, line3)

print haiku
<<<<<<< HEAD
=======





































        





















>>>>>>> 2d242adaf56c682911866ce532aa0943cf2e4366
